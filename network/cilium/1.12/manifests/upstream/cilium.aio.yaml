---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-network
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-network
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-network
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-network
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-network
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU4xOThLQTNOMnl0UWRKSnRyMlczL2t3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TVRJd09URTBOVE0xTUZvWERUSTFNVEl3T0RFMApOVE0xTUZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFzWE9ad1l5dHFockNjVEJRY3RhT3VZNDE2V1hzS2IzaHJGWWJZWUdSbG00c256cWgKbkQyd0Q5aThES0F2aCszaGQ3TE5iRDllK3VVU2p2S0VPNXRWSmJ3bWtQbHBVUFhZZEQvaVk1VUcxS2lnci9BcApSUUtGNDhtZjdiVDU1YkRUbmpHMDJmSzJiaTQrelc3anpGenFxZmttcndCbjhUclhkNmZPVlNXeEZoU0d6bnZRCk1zeTdqRGQweWhjVHpCa0RJK2hzK1E4ekJJdEhyTlFzZC9LdUFzT0VId29wTWtaN21WR3NtVFlRN0RtOXlPSDUKSk95amFnVzhRTUo2ZFBlTzNEcU02Z0NNSlowdzY1a05jWDF1RzhqQ25BeHJHYTNDN0ZXWWsrd1FwSCtGZEUvYQpoU2t5cHJJUXpHdTFTaytWeS82RDV1WjRLdkRKOWV5OUl1Vk5Jd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQ1N3TEVvU3ZmWlllSm5ha2tWZFFCcmI0aVVTTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQldtNVJoNnZUY2RjL2QvZnlkYkowSk9ONTQ1enJRNlJPRFlUTi9tUUxFM3pWRnZGaFZZcVJiCnhmV3ZTQmlQeGZEd2tkVzNtcTZCNFpTTFlYU09UenMzYktjeHpWRGxvUmd5SXMzaS83S1VVeFdHMjJCNHVDQW4KU2ZkNnJoaWJyemZQaXFsanZJNm44U2xHYXo4ODNrQTFuR1dnd2p1czJuNy9GSFM5Q0xrd0VFMXpqaDVMMitjTApzYUJveGtocEFsL1pvZ08zanBHSXNzMTZLRmhYRFZ0RzlYWU01MW5yK24yZFppczRLQXpNdmQwM3J2RFRpUGdwCjRTc25udFpIUHFZT2V3dHNoRWR6bUNkSFBUdnowaWxOU2lFdWprR09CWExkK3NuUHpiMjdkTVZidUQrVjhLb04KemphZTAxMFNEWlZ4eUduMUhidkRTODU0end0cXNiUXQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBc1hPWndZeXRxaHJDY1RCUWN0YU91WTQxNldYc0tiM2hyRlliWVlHUmxtNHNuenFoCm5EMndEOWk4REtBdmgrM2hkN0xOYkQ5ZSt1VVNqdktFTzV0Vkpid21rUGxwVVBYWWREL2lZNVVHMUtpZ3IvQXAKUlFLRjQ4bWY3YlQ1NWJEVG5qRzAyZksyYmk0K3pXN2p6RnpxcWZrbXJ3Qm44VHJYZDZmT1ZTV3hGaFNHem52UQpNc3k3akRkMHloY1R6QmtESStocytROHpCSXRIck5Rc2QvS3VBc09FSHdvcE1rWjdtVkdzbVRZUTdEbTl5T0g1CkpPeWphZ1c4UU1KNmRQZU8zRHFNNmdDTUpaMHc2NWtOY1gxdUc4akNuQXhyR2EzQzdGV1lrK3dRcEgrRmRFL2EKaFNreXBySVF6R3UxU2srVnkvNkQ1dVo0S3ZESjlleTlJdVZOSXdJREFRQUJBb0lCQUI5Q2h3NkNrc0ZKajRGVApDb2tBWlFvcEZEUTJnVURsTTFFaHBoY3FOUlJ6K2laZXRNT0tWbTZrTnBSZXo2QzVkaU9ZK3ZrYnZNYWovZjN5Cm1QckxKVmZOYWxuVnBnamVGakI4Wkl3NFg0aXM0QW0rVy9iTk4vcmx0T2V5SHVlb204N2RZTWVZS3kwRHRvcUkKQTFjbjh5cllPa2xQMy8rdDV2RXNQWHZnZE82M2lhcmhxVlhWUXl3dlFVMUU3UnY1YlZmQ0hxQ0JaWUVKRmlpeApXRmMrZUtCRmNxMnMzT2JFS2tzVUlQQ3VBWWQ3bnRoZlc4WHZmQXRzRkRsTG9DRjlkcXNiUlQxT1J1U2hOYjIzCm1YNDNjMWczZ3czV0lBYlJVM0tuOHU0UGF3cVFWM0k5WWlSWkFNSmlNR2o2RnQ3TUJMN2RWeXFNOUh1YTlFa2wKRGhGRkVJa0NnWUVBeFZiZjVnVW16T0dWaFJNOHpMc215VUlQMFJ1RHZoS2h3RGxBbHRmTHludjJOWHJWcFFiegpreW15alBrelRSQ0NJNlgxU0hPSW5MeHNmdnUwSnlZYmV3K2NTSlgvdUtGTlFOZWt3Yncwczk3aGV4djJ0bjhWCm9XM3dydmVaTDU0MmdHUS9Fck9oYmZvOVpCU3kyRmkvMEN0VWZMWXBXMFZTcXp3dzZUVCt3WjBDZ1lFQTVqTk8KTmo4bkI1L3B1YS9BZXhFUlBacDFHdWk5L2NzLzZrT2YrcU5DclFHVURnWDdIZTdEMFRFeEx4V3E4M1NKckJqOApianNLdFpFOE5HUk5kOEo4QS8rcUUvblBTTzVIcmtuOEtiSjRINDhLRzlxZUg2TzQ0RWUwUFEwMFVpS1NKbFZMCi84VUxDVnhHZlpnUmtCYzNPQUVUUkFRd01ocnFIUE1MMDhuL2JiOENnWUVBd3diZGxsVm5DRHExYTJRY3hYVDgKbXhCMzAwQXZEaTBad0lDVWpiOU5mNXJOTkFObW00Ym9PSHVRSTNTeE42dG1BbGNrdDJxL0M2L0lSaUw1NDJycwo0ODBFdGxQUCs2Y21VendMYnhCU3dhVTNFRlVObVVTMW11bXRZUzRBTGFoZDBydS8vZnFiUXJaNTc2dnBLSmxsClVCVlNsVUh1VTI2S2lnS2RrQXk0N1owQ2dZRUFrZ2EzdFhlb0paRU9iYWtNZThUZTMrb3NJUTdFL3NyQTE3VmcKTlZqOVFjdi9oRW5NK3picjVyYkMwWEI0U2dtQ0Q3YWw0ckwzWHlnclBiem0yM0oyd3Y2YWdDTjJsM2YzNXBxdQpLREU3UENHN3N1R2lic1duMERZTUlySk9uMCtvMEVKSmZJMGRMQ25wMlYvdXZDM043R3ZhTWNwS1hHNXdWajdqCklNMUJoL2NDZ1lCVFhxa0ZGanpqaGlLUnhCN3RKUS9CVnVYZGFveGtRNjJ1UzdLeDZqMml1Nnp0MU1LTFpZS1oKZzNaZ1dxKzVkSHRlRXZJQTcyWnk3ZytiVXNpRE83aGNFV2NVYVdGRXJGdVhhcENpMklQOVY3UzBvSU9wKzBwUAowYldoK3paU1htWndJM0hjQjM1K0trMlI4WXYzMVFzQlZ0Mnh1b3B2TGRPQnBhbW9XK2dOMlE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-network
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU4xOThLQTNOMnl0UWRKSnRyMlczL2t3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TVRJd09URTBOVE0xTUZvWERUSTFNVEl3T0RFMApOVE0xTUZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFzWE9ad1l5dHFockNjVEJRY3RhT3VZNDE2V1hzS2IzaHJGWWJZWUdSbG00c256cWgKbkQyd0Q5aThES0F2aCszaGQ3TE5iRDllK3VVU2p2S0VPNXRWSmJ3bWtQbHBVUFhZZEQvaVk1VUcxS2lnci9BcApSUUtGNDhtZjdiVDU1YkRUbmpHMDJmSzJiaTQrelc3anpGenFxZmttcndCbjhUclhkNmZPVlNXeEZoU0d6bnZRCk1zeTdqRGQweWhjVHpCa0RJK2hzK1E4ekJJdEhyTlFzZC9LdUFzT0VId29wTWtaN21WR3NtVFlRN0RtOXlPSDUKSk95amFnVzhRTUo2ZFBlTzNEcU02Z0NNSlowdzY1a05jWDF1RzhqQ25BeHJHYTNDN0ZXWWsrd1FwSCtGZEUvYQpoU2t5cHJJUXpHdTFTaytWeS82RDV1WjRLdkRKOWV5OUl1Vk5Jd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQ1N3TEVvU3ZmWlllSm5ha2tWZFFCcmI0aVVTTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQldtNVJoNnZUY2RjL2QvZnlkYkowSk9ONTQ1enJRNlJPRFlUTi9tUUxFM3pWRnZGaFZZcVJiCnhmV3ZTQmlQeGZEd2tkVzNtcTZCNFpTTFlYU09UenMzYktjeHpWRGxvUmd5SXMzaS83S1VVeFdHMjJCNHVDQW4KU2ZkNnJoaWJyemZQaXFsanZJNm44U2xHYXo4ODNrQTFuR1dnd2p1czJuNy9GSFM5Q0xrd0VFMXpqaDVMMitjTApzYUJveGtocEFsL1pvZ08zanBHSXNzMTZLRmhYRFZ0RzlYWU01MW5yK24yZFppczRLQXpNdmQwM3J2RFRpUGdwCjRTc25udFpIUHFZT2V3dHNoRWR6bUNkSFBUdnowaWxOU2lFdWprR09CWExkK3NuUHpiMjdkTVZidUQrVjhLb04KemphZTAxMFNEWlZ4eUduMUhidkRTODU0end0cXNiUXQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBc1hPWndZeXRxaHJDY1RCUWN0YU91WTQxNldYc0tiM2hyRlliWVlHUmxtNHNuenFoCm5EMndEOWk4REtBdmgrM2hkN0xOYkQ5ZSt1VVNqdktFTzV0Vkpid21rUGxwVVBYWWREL2lZNVVHMUtpZ3IvQXAKUlFLRjQ4bWY3YlQ1NWJEVG5qRzAyZksyYmk0K3pXN2p6RnpxcWZrbXJ3Qm44VHJYZDZmT1ZTV3hGaFNHem52UQpNc3k3akRkMHloY1R6QmtESStocytROHpCSXRIck5Rc2QvS3VBc09FSHdvcE1rWjdtVkdzbVRZUTdEbTl5T0g1CkpPeWphZ1c4UU1KNmRQZU8zRHFNNmdDTUpaMHc2NWtOY1gxdUc4akNuQXhyR2EzQzdGV1lrK3dRcEgrRmRFL2EKaFNreXBySVF6R3UxU2srVnkvNkQ1dVo0S3ZESjlleTlJdVZOSXdJREFRQUJBb0lCQUI5Q2h3NkNrc0ZKajRGVApDb2tBWlFvcEZEUTJnVURsTTFFaHBoY3FOUlJ6K2laZXRNT0tWbTZrTnBSZXo2QzVkaU9ZK3ZrYnZNYWovZjN5Cm1QckxKVmZOYWxuVnBnamVGakI4Wkl3NFg0aXM0QW0rVy9iTk4vcmx0T2V5SHVlb204N2RZTWVZS3kwRHRvcUkKQTFjbjh5cllPa2xQMy8rdDV2RXNQWHZnZE82M2lhcmhxVlhWUXl3dlFVMUU3UnY1YlZmQ0hxQ0JaWUVKRmlpeApXRmMrZUtCRmNxMnMzT2JFS2tzVUlQQ3VBWWQ3bnRoZlc4WHZmQXRzRkRsTG9DRjlkcXNiUlQxT1J1U2hOYjIzCm1YNDNjMWczZ3czV0lBYlJVM0tuOHU0UGF3cVFWM0k5WWlSWkFNSmlNR2o2RnQ3TUJMN2RWeXFNOUh1YTlFa2wKRGhGRkVJa0NnWUVBeFZiZjVnVW16T0dWaFJNOHpMc215VUlQMFJ1RHZoS2h3RGxBbHRmTHludjJOWHJWcFFiegpreW15alBrelRSQ0NJNlgxU0hPSW5MeHNmdnUwSnlZYmV3K2NTSlgvdUtGTlFOZWt3Yncwczk3aGV4djJ0bjhWCm9XM3dydmVaTDU0MmdHUS9Fck9oYmZvOVpCU3kyRmkvMEN0VWZMWXBXMFZTcXp3dzZUVCt3WjBDZ1lFQTVqTk8KTmo4bkI1L3B1YS9BZXhFUlBacDFHdWk5L2NzLzZrT2YrcU5DclFHVURnWDdIZTdEMFRFeEx4V3E4M1NKckJqOApianNLdFpFOE5HUk5kOEo4QS8rcUUvblBTTzVIcmtuOEtiSjRINDhLRzlxZUg2TzQ0RWUwUFEwMFVpS1NKbFZMCi84VUxDVnhHZlpnUmtCYzNPQUVUUkFRd01ocnFIUE1MMDhuL2JiOENnWUVBd3diZGxsVm5DRHExYTJRY3hYVDgKbXhCMzAwQXZEaTBad0lDVWpiOU5mNXJOTkFObW00Ym9PSHVRSTNTeE42dG1BbGNrdDJxL0M2L0lSaUw1NDJycwo0ODBFdGxQUCs2Y21VendMYnhCU3dhVTNFRlVObVVTMW11bXRZUzRBTGFoZDBydS8vZnFiUXJaNTc2dnBLSmxsClVCVlNsVUh1VTI2S2lnS2RrQXk0N1owQ2dZRUFrZ2EzdFhlb0paRU9iYWtNZThUZTMrb3NJUTdFL3NyQTE3VmcKTlZqOVFjdi9oRW5NK3picjVyYkMwWEI0U2dtQ0Q3YWw0ckwzWHlnclBiem0yM0oyd3Y2YWdDTjJsM2YzNXBxdQpLREU3UENHN3N1R2lic1duMERZTUlySk9uMCtvMEVKSmZJMGRMQ25wMlYvdXZDM043R3ZhTWNwS1hHNXdWajdqCklNMUJoL2NDZ1lCVFhxa0ZGanpqaGlLUnhCN3RKUS9CVnVYZGFveGtRNjJ1UzdLeDZqMml1Nnp0MU1LTFpZS1oKZzNaZ1dxKzVkSHRlRXZJQTcyWnk3ZytiVXNpRE83aGNFV2NVYVdGRXJGdVhhcENpMklQOVY3UzBvSU9wKzBwUAowYldoK3paU1htWndJM0hjQjM1K0trMlI4WXYzMVFzQlZ0Mnh1b3B2TGRPQnBhbW9XK2dOMlE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-network
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU4xOThLQTNOMnl0UWRKSnRyMlczL2t3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TVRJd09URTBOVE0xTUZvWERUSTFNVEl3T0RFMApOVE0xTUZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFzWE9ad1l5dHFockNjVEJRY3RhT3VZNDE2V1hzS2IzaHJGWWJZWUdSbG00c256cWgKbkQyd0Q5aThES0F2aCszaGQ3TE5iRDllK3VVU2p2S0VPNXRWSmJ3bWtQbHBVUFhZZEQvaVk1VUcxS2lnci9BcApSUUtGNDhtZjdiVDU1YkRUbmpHMDJmSzJiaTQrelc3anpGenFxZmttcndCbjhUclhkNmZPVlNXeEZoU0d6bnZRCk1zeTdqRGQweWhjVHpCa0RJK2hzK1E4ekJJdEhyTlFzZC9LdUFzT0VId29wTWtaN21WR3NtVFlRN0RtOXlPSDUKSk95amFnVzhRTUo2ZFBlTzNEcU02Z0NNSlowdzY1a05jWDF1RzhqQ25BeHJHYTNDN0ZXWWsrd1FwSCtGZEUvYQpoU2t5cHJJUXpHdTFTaytWeS82RDV1WjRLdkRKOWV5OUl1Vk5Jd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQ1N3TEVvU3ZmWlllSm5ha2tWZFFCcmI0aVVTTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQldtNVJoNnZUY2RjL2QvZnlkYkowSk9ONTQ1enJRNlJPRFlUTi9tUUxFM3pWRnZGaFZZcVJiCnhmV3ZTQmlQeGZEd2tkVzNtcTZCNFpTTFlYU09UenMzYktjeHpWRGxvUmd5SXMzaS83S1VVeFdHMjJCNHVDQW4KU2ZkNnJoaWJyemZQaXFsanZJNm44U2xHYXo4ODNrQTFuR1dnd2p1czJuNy9GSFM5Q0xrd0VFMXpqaDVMMitjTApzYUJveGtocEFsL1pvZ08zanBHSXNzMTZLRmhYRFZ0RzlYWU01MW5yK24yZFppczRLQXpNdmQwM3J2RFRpUGdwCjRTc25udFpIUHFZT2V3dHNoRWR6bUNkSFBUdnowaWxOU2lFdWprR09CWExkK3NuUHpiMjdkTVZidUQrVjhLb04KemphZTAxMFNEWlZ4eUduMUhidkRTODU0end0cXNiUXQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQU45SFJENXpQbk9vNGI1ZUFWNjBldFl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TVRJd09URTBOVE0xTUZvWERUSTFNVEl3T0RFMApOVE0xTUZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXdkb1ltK0FUQU1wTlRlOHErOEpaUEVEekI0enoKendwVThPaEsrS0VTT3VlK1BUVEpFaTAyRUovS2FwbVZuSlBXSUJiSGgrZXVXU3pEUnFwdEtjQkFybldIL3piKwo1S2tjRlI4dVFsb1hYZ0pyU2hWV1FIQXZwRG9nTVhLSStTcXBjWXlORDVDdnZYSlFKUkd3aWVtY1U0MkJMdVN2CnJEeTdxVzhEWTNnaEd2ZDNjbjdFOWM3WG1KYklIditYSW1uMzhxdDlRUmZqbHBoQ21OQTd1Skw2VGFpTWVvTXIKS3dyb3E4c3EzeGNOZHUrZGlqZGlsZFc2Q3hjUnR6TkFKY2F3OWtSWk5RTHlPclZ6Mlo3Y2xUZWlOQUphTWRNagpoWVRpbTJpYUFnZFIyOEdickdydkxidllrUDcvRm81SU5WNnJ1N3JCNE83NGJlK1dMZjJuY3hwUlJ3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUWtzQ3hLRXIzMldIaVoycEpGWFVBYQoyK0lsRWpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBSEdhSWxHTWMvK1RjUGRoL3B5NTNDYWt6VEs4L0lDdUhvdnZlZ3Q2MTQ0YmN6OHQKY0RKQnFOaWdkM3FHWWhRbFBSb2I3dVpzUnErTXVwQ3ZGUy82R3hBL0QwdTdiU25RRUVWZ0pCVkdMSUpybkFOeAo1YXE5RFhmOHBMV1V0eElXNktrZlk2YXY2S3ZVVlYyY3VGL2xXT2xxRTl1aTA0M0ZOaHRBMjBJdU1YakpnYWNGCitZUzJ4Vk95dnBrVVNOdWVEcVBxYVNXMkhSaGxOUWxJa2NyTWFqS2p0bk9TV3o2Mzg1Qys0aXA2Y1M1Um1BWTYKOU5jZFFTb2tBSWs5dHh1VldLZE5Zd1RHSkVqVDJNTlR4Q3l1RGNTRkxtMG5IRnE3L2ZoZE5tNXR3RHRUM0p1Vgp2emJjK2NNWm1heTJ5NTFIUWxCYWxLMUFoQ3NSRTQwcUhxOExLTms9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd2RvWW0rQVRBTXBOVGU4cSs4SlpQRUR6QjR6enp3cFU4T2hLK0tFU091ZStQVFRKCkVpMDJFSi9LYXBtVm5KUFdJQmJIaCtldVdTekRScXB0S2NCQXJuV0gvemIrNUtrY0ZSOHVRbG9YWGdKclNoVlcKUUhBdnBEb2dNWEtJK1NxcGNZeU5ENUN2dlhKUUpSR3dpZW1jVTQyQkx1U3ZyRHk3cVc4RFkzZ2hHdmQzY243RQo5YzdYbUpiSUh2K1hJbW4zOHF0OVFSZmpscGhDbU5BN3VKTDZUYWlNZW9Nckt3cm9xOHNxM3hjTmR1K2RpamRpCmxkVzZDeGNSdHpOQUpjYXc5a1JaTlFMeU9yVnoyWjdjbFRlaU5BSmFNZE1qaFlUaW0yaWFBZ2RSMjhHYnJHcnYKTGJ2WWtQNy9GbzVJTlY2cnU3ckI0Tzc0YmUrV0xmMm5jeHBSUndJREFRQUJBb0lCQVFDeDRwdlFkaGVhRXdwTApLTnl0dUJOQTZtelprZXV0SXRMOVdueHBtUXpzaHZvWW1sYWsybDRSZFVBKy8vNjlkeC8zeEUrSEUvLzJqdEFICkNaOHd2OTNhK2JrNVpsTVNxMmc4cmFjNmRnZVpXZWp3UzVJaGdaRUdSOXlBNDVSejZVVWlFSkxsSktWUDJCVloKWHRrOFJPWVIrZmtBZWhRR25waXFpMWQxc0tmWVlJTHRXcHF4dTJaZDd6VTRxTGJVSzZQRTFVbzRVSlNOMzdFQQphRXEzb3kvdEgzOVhSYzllQlEvVy9xblRxWkM3Um1pT3FwN3c3YjNwQ2wydE1vaTdlRmNOd3JjUENHQXZpWW5HCmtXdmM5R1Y5ZENFY0ZJSytUWm9vSE93VktGOE1NOFdkT1NscG1mc3NvV01KbnA1Y0o3RlcxN3kwWXhxWkFQYjIKcUZ4dE5GVGhBb0dCQU5mMDZIb1lFVGFhR3pEUk9COTNVSTBoYTNzS3dHTkhKTjQ1a2YvTUJqVVBEREQ3VnE3OQo4TmFHVk1MaGFEbkxXejBVUUVBbTFMakFGOTd3OVRQUFNTRVFoeVJCTHVuR0phaXRjeW9QVFQrbnhBWEk1Q0k1CitTWjEwT3paa09hVElueHdLellaTWt3VlRROTZyV2RPbVJKbWRaa0VoZjhOUlZXb1dkRU43aEx4QW9HQkFPWEwKNmc3Q04wRC9XQzZveTFCRGUzNkttWDYyZGEvUWVrd1J6RHgrcHdDMStFT2M0YUYwS0tzR1pnSi9zbVJ4NGR3aApFamExNzdrZGtTdHQwc2tYMUhyRlBVY2hUVVpBY1VyVVZLZU5QWXhhdzVVVktEUmFIWXVyNjMzM2ZwNytMditnCjYwY3NZdkhiUEpYMTV4NThVVVZwZ3N6UjN2czVmdXdTcUhYRGFUZTNBb0dBZm1uTGFDVU1kblR4TTd0VTZmNXkKOVpvNWkxWDQxbVIvN1dHdjJCZTdEbllYZ2RpdW5sTGlGd0dkUGxLcUt5S2g3dmdhd0RLNjFNY0ZjaWlFc0daSApmWVpxUlV1dXhZT0s2ZGxXajZsVFk4NjF6VmtTU2dLN21NcmdtTFNtd0lJaWJzdE9VQ1docnEzTlpTRS92amhoCkhFZEQwV1czZGx4eldMZnFrNWhlNDFFQ2dZQWNvZ25xQ04wbHBpdHd0T3VRZHJnZWpscU41V0pJbyt0NUt3YU4KeXlJMy9uU095Qzk5RktJMG5UbDh1amlhTjI1ekpWUEZxV25UWVJIRG5ZMlVMUG4yeWpqV2NoblUxUmJJd2loQwpNR0VvNmU1UTF6QUpSZWxFakFsdHlyYm1UTG5DZEdTY203VkFlWmJWQUt6cHFZZmU1RVMrRExDQ0VTbjFkR1cxCk5zSVhoUUtCZ0ZrMTl1ellLVXdNRzFDMVJ3Z2xSQXNDZ2YyekJpdEJqTUNpaS9YOUR5QkdwSWZKNEFSNzdaYlEKYW9Td1pNSkp5aVJrUDVtL2xvRjQyeTN5azBoUmNUZGhUekN1MTBPYjNESjZsNWpVWHc5L0FjZmJPNlg4c2htYQpYaEZtMzcxQmdFMTl1c1MwVGk1VEpVYWwxN2ZsV2dGNDJnZGFxZklPRytYbnJ5YUhzL2VXCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-network
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU4xOThLQTNOMnl0UWRKSnRyMlczL2t3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TVRJd09URTBOVE0xTUZvWERUSTFNVEl3T0RFMApOVE0xTUZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFzWE9ad1l5dHFockNjVEJRY3RhT3VZNDE2V1hzS2IzaHJGWWJZWUdSbG00c256cWgKbkQyd0Q5aThES0F2aCszaGQ3TE5iRDllK3VVU2p2S0VPNXRWSmJ3bWtQbHBVUFhZZEQvaVk1VUcxS2lnci9BcApSUUtGNDhtZjdiVDU1YkRUbmpHMDJmSzJiaTQrelc3anpGenFxZmttcndCbjhUclhkNmZPVlNXeEZoU0d6bnZRCk1zeTdqRGQweWhjVHpCa0RJK2hzK1E4ekJJdEhyTlFzZC9LdUFzT0VId29wTWtaN21WR3NtVFlRN0RtOXlPSDUKSk95amFnVzhRTUo2ZFBlTzNEcU02Z0NNSlowdzY1a05jWDF1RzhqQ25BeHJHYTNDN0ZXWWsrd1FwSCtGZEUvYQpoU2t5cHJJUXpHdTFTaytWeS82RDV1WjRLdkRKOWV5OUl1Vk5Jd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQ1N3TEVvU3ZmWlllSm5ha2tWZFFCcmI0aVVTTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQldtNVJoNnZUY2RjL2QvZnlkYkowSk9ONTQ1enJRNlJPRFlUTi9tUUxFM3pWRnZGaFZZcVJiCnhmV3ZTQmlQeGZEd2tkVzNtcTZCNFpTTFlYU09UenMzYktjeHpWRGxvUmd5SXMzaS83S1VVeFdHMjJCNHVDQW4KU2ZkNnJoaWJyemZQaXFsanZJNm44U2xHYXo4ODNrQTFuR1dnd2p1czJuNy9GSFM5Q0xrd0VFMXpqaDVMMitjTApzYUJveGtocEFsL1pvZ08zanBHSXNzMTZLRmhYRFZ0RzlYWU01MW5yK24yZFppczRLQXpNdmQwM3J2RFRpUGdwCjRTc25udFpIUHFZT2V3dHNoRWR6bUNkSFBUdnowaWxOU2lFdWprR09CWExkK3NuUHpiMjdkTVZidUQrVjhLb04KemphZTAxMFNEWlZ4eUduMUhidkRTODU0end0cXNiUXQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTakNDQWpLZ0F3SUJBZ0lRSXpSZGR5elpvNjdPQllPSEhsRm9DakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nakl4TWpBNU1UUTFNelV3V2hjTk1qVXhNakE0TVRRMQpNelV3V2pBa01TSXdJQVlEVlFRRERCa3FMbUV1YUhWaVlteGxMV2R5Y0dNdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXRiLzVERWxyVmRtM1ZpUGo4RWhvMzJyNDgzYkgKcWpzOWljVXZXcWxJUnYrWUlvSlJ5VXZ3cFR2bFVoM2xLK1N5K3pobTJVbnZqV2Z3WVpzaS93ZjMySCthVDBNVApEZjkwNm5qYnNJYzRPL2pNTHFGbENnL0wyZUhyaTAxeGdaUDRYZ05kMVB2NFFIemQwVEh2Rk9uRTF0RjdjQ2p2CmhyUGVrUHBLc0ZyUStUTW1samdFMGJjUENOMXlmNS9NRkpST21aTXdQcFllNXhUMm5sbWgvVnpKRitzMmtScG4KS0RFMW9TMk5KWFZBeERZL1FXSlpTMVRaM3pKSWdlVWR2a1hwN25Hd2d4UTR0MmRUc1FyQTNxVkRYbDBhSGkrYwoxdExpK2tsNEdLWllkRURGTHQvMzhtUjk4UmVTN3NuTktCdXdZdHlmVTM4U29IWWhHTkN6UGZsQnB3SURBUUFCCm80R0hNSUdFTUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUWtzQ3hLRXIzMldIaVoycEpGWFVBYQoyK0lsRWpBa0JnTlZIUkVFSFRBYmdoa3FMbUV1YUhWaVlteGxMV2R5Y0dNdVkybHNhWFZ0TG1sdk1BMEdDU3FHClNJYjNEUUVCQ3dVQUE0SUJBUUNPNCsyckZBcWZCZnhNbTBsaG5PQ0thUHk1ZWVWR1AwMk9JNEtCMC91ZUo3SVoKS01ZRno2S2lYMEcxeGRJVDVDcmx0QzhHZTZqcVpPUWl3WkZ0NEhiQUhJS1VUOGJKWUZrdTlkZldBVXRHTFdmcAozZk9pdzlyWmRXTVB6VUQ5RmpWM1ByeUUwcDFsckVTbzhLK2hES2puQTA3aVU5d0p2dzZBSTkraGNOdTBYMGEzCkJHOW0rU1ZNYmkrdXlLbjkxUU1teDJpajgzaUNscXYwLys5ZVM0T2NleDd3ckhXUUFVRHdRakp3cHUxamJNcXIKOU54Y3NVM1dONHI5bU9ieklZRmM4QitWdGprVFF2N0hTUUk3WXVKVGRrc2ZLNXRaUytHRUcrR0hXWmxTNlhhYwpwOVNEN2toNHV2cUVWRW1EL01DZXBRK0E2ZjdXRlNTRnZ1SnJGY1NZCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdGIvNURFbHJWZG0zVmlQajhFaG8zMnI0ODNiSHFqczlpY1V2V3FsSVJ2K1lJb0pSCnlVdndwVHZsVWgzbEsrU3kremhtMlVudmpXZndZWnNpL3dmMzJIK2FUME1URGY5MDZuamJzSWM0Ty9qTUxxRmwKQ2cvTDJlSHJpMDF4Z1pQNFhnTmQxUHY0UUh6ZDBUSHZGT25FMXRGN2NDanZoclBla1BwS3NGclErVE1tbGpnRQowYmNQQ04xeWY1L01GSlJPbVpNd1BwWWU1eFQybmxtaC9WekpGK3Mya1JwbktERTFvUzJOSlhWQXhEWS9RV0paClMxVFozekpJZ2VVZHZrWHA3bkd3Z3hRNHQyZFRzUXJBM3FWRFhsMGFIaStjMXRMaStrbDRHS1pZZEVERkx0LzMKOG1SOThSZVM3c25OS0J1d1l0eWZVMzhTb0hZaEdOQ3pQZmxCcHdJREFRQUJBb0lCQUh4NnpVSkREc2F2NU1lVQpzVXNpN09FSVRSWEM1cUdMRFd6TXB0QTdYUXR6aDJrclJJVFFCRFBIUUJycjZzZ1RUUnFPMkxJOTExcE1NL0ZGCjVjUXlXdWZuRFhMNEI1Ynd2Y3pSbGZYanh2b2NQd3c0OGhEZ0hNaFAyWm1CSXhxU2src2Y5eVltcFRMVjByNnkKcW9MeVVTU29PUmpxa0pMN29wWTlOdVp1Yk80Zm1GV2xUMjRyNStBQy9Tbnd0WFpMRW5xWkZ3T212dmx5NmNJaQp6RTZFZ3lyeE1OVjNpRyt6dkQzeVRJaFoydnpmdzdaNVBFQURlMHEyTXFQMmhyQ0UvcnZTVVdpQkFhdGIvZTlNCjZKSGc4NWQra1B4NXd5S1EyQVI2RHFXMlR4VlArM0NSenM2aE5YaE5yMk11N2YrR2o3NUd2aWxWcWFyNkEzMEQKNWtsTFJwRUNnWUVBeWhIbCtlZmpab0VvdG1Eb0tRUGZlUjJyNEU5VHl3QXNpZittV0RjVy9zcmtNdzA2enNGdAp1WUJ1NjQzc0NObHRtMll6enhWUUkza3NCa0cwMmJ4a0FlNzNUTzlBbS83RHBKRVlER2dnMHBSTXN3NkpTbUVRCnhuUHNwWVNNaHIrK0pINDZFcUdyYnJOU1FPVlJXVTNMMGJvUDVsTFJaRUNUNUw2SVJibkRTeTBDZ1lFQTVrRzkKNHZoYzJKd1Z0U3NEc3prSmp1eVhzaVJRR25yTHpFMzE4ajViZjdvbks2RHZmeXlabVpJQ2hXRW9mbHhQWWo1ZQphOFZZUlRXQTNJWnNsNEo0d0pzbWYwMXBMTzhLTFZVUWE0a2M2cWZheEFJWUk5K09KcFA0WnpoZjFDdk9mVHdsCkFQOHdHVm15K3ZRWHRLK0xrS2ZmZS9FNU1NSzJoZEV6ZEhUUWRLTUNnWUVBbkhjRGRtQ0NDa3NVZFRQUVVJSDUKTmxVdFUwRFpoeVNaV0RtbVdrUStBQWltYm9sZDhkNkEwZFNMRHNZVDhENDd5c3AyYjNEM1hxQmk0RzFjVmdTMApBM00vOWtpRDVNWitReDArVzh6OUxWRTdtcUkwMkcwVWlqWVZGWXp2S3grcFlhU0QzdzFrS3hHYkxUampwcHpBCnA2TEUwUGxydlk3cmRZRzdEeEpxRC9rQ2dZRUF1SS9MbDhtQ0NuSWFDRXlCTzhBbFJEV3FaalVySy81dnFzUjIKdG9SN0xRZFdiR2NrY1dpYmVmZ0tJMFU4Z3dTVThPZVRJWWxlZHFNck5oaGRwSmdGR0VXRWR4ZmlqUXpSdUlKdApsZlNpaEFpbGx1VWkybVpQOStZMWZ1ODJDTWhRVEJ2UWdWc0svOWJoV3J3YTRFNnhiUExTZFBObTV3bTc2Y2xGCkdEeWw5a2NDZ1lCNjI1ZzZWYnJLekdpKzFJSDhpMzcrbXNmbVZuZ0YwYmM4T2NQeE00bWF2b2lkTndNaDFvVzcKQU94bHVQQzJCTTNET0VPaGJuV0lIWnB1K1lhVTFSWUFoVm9xSXFCY2dzVXdSeElsaWVxclNCbDlUOHBYU0JYNgo4TlU4NWZsUEZ0YUNSZ25BcVBWanFvWVdWTVUxWHF4RlU1K3NoZmxUZXNvQjhlV2MwRTFSN1E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-network
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/policy/intro/#policy-enforcement-modes
  enable-policy: "never"
  # If you want metrics enabled in all of your Cilium agents, set the port for
  # which the Cilium agents will have their metrics exposed.
  # This option deprecates the "prometheus-serve-addr" in the
  # "cilium-metrics-config" ConfigMap
  # NOTE that this will open the port on ALL nodes where Cilium pods are
  # scheduled.
  prometheus-serve-addr: ":9962"
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"
  # If you want metrics enabled in cilium-operator, set the port for
  # which the Cilium Operator will have their metrics exposed.
  # NOTE that this will open the port on the nodes where Cilium operator pod
  # is scheduled.
  operator-prometheus-serve-addr: ":9963"
  enable-metrics: "true"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: 5s

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0) of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  # bpf-lb-bypass-fib-lookup instructs Cilium to enable the FIB lookup bypass
  # optimization for nodeport reverse NAT handling.
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: a
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "1"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: "vxlan"
  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-masquerade: "true"
  enable-bpf-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "true"

  kube-proxy-replacement: "probe"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  endpoint-status: "health"
  enable-endpoint-routes: "true"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # Address to expose Hubble metrics (e.g. ":7070"). Metrics server will be disabled if this
  # field is not set.
  hubble-metrics-server: ":9965"
  # A space separated list of metrics to enable. See [0] for available metrics.
  #
  # https://github.com/cilium/hubble/blob/master/Documentation/metrics.md
  hubble-metrics:
    dns:query;ignoreAAAA
    drop
    tcp
    flow
    icmp
    http
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  cluster-pool-ipv4-cidr: "10.4.0.1/14"
  cluster-pool-ipv4-mask-size: "23"
  disable-cnp-status-updates: "true"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-k8s-endpoint-slice: "true"
  enable-bgp-control-plane: "false"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-network
data:
  config.yaml: |
    cluster-name: a
    peer-service: "hubble-peer.kube-network.svc.cluster.local:443"
    listen-address: :4245
    metrics-listen-address: ":9966"
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-network
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n\n        location / {\n            try_files $uri $uri/ /index.html;\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumbgploadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumegressnatpolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumbgploadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumegressnatpolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-network
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-network
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-network
---
# Source: cilium/templates/cilium-agent/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: cilium-agent
  namespace: kube-network
  labels:
    k8s-app: cilium
spec:
  clusterIP: None
  type: ClusterIP
  selector:
    k8s-app: cilium
  ports:
  - name: metrics
    port: 9962
    protocol: TCP
    targetPort: prometheus
  - name: envoy-metrics
    port: 9964
    protocol: TCP
    targetPort: envoy-metrics
---
# Source: cilium/templates/cilium-operator/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: cilium-operator
  namespace: kube-network
  labels:
    io.cilium/app: operator
    name: cilium-operator
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: metrics
    port: 9963
    protocol: TCP
    targetPort: prometheus
  selector:
    io.cilium/app: operator
    name: cilium-operator
---
# Source: cilium/templates/hubble-relay/metrics-service.yaml
# We use a separate service from hubble-relay which can be exposed externally
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay-metrics
  namespace: kube-network
  labels:
    k8s-app: hubble-relay
spec:
  clusterIP: None
  type: ClusterIP
  selector:
    k8s-app: hubble-relay
  ports:
  - name: metrics
    port: 9966
    protocol: TCP
    targetPort: prometheus
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-network
  labels:
    k8s-app: hubble-relay
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-network
  labels:
    k8s-app: hubble-ui
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-metrics
  namespace: kube-network
  labels:
    k8s-app: hubble
  annotations:
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-network
  labels:
    k8s-app: cilium
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-network
  labels:
    k8s-app: cilium
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.12.4@sha256:4b074fcfba9325c18e97569ed1988464309a5ebf64bbc79bec6f3d58cafcb8cf"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cni-chaining-mode
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: custom-cni-conf
              optional: true
        lifecycle:
          postStart:
            exec:
              command:
              - "/cni-install.sh"
              - "--enable-debug=false"
              - "--cni-exclusive=true"
              - "--log-file=/var/run/cilium/cilium-cni.log"
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        ports:
        - name: peer-service
          containerPort: 4244
          hostPort: 4244
          protocol: TCP
        - name: prometheus
          containerPort: 9962
          hostPort: 9962
          protocol: TCP
        - name: envoy-metrics
          containerPort: 9964
          hostPort: 9964
          protocol: TCP
        - name: hubble-metrics
          containerPort: 9965
          hostPort: 9965
          protocol: TCP
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: cni-path
          mountPath: /host/opt/cni/bin
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
      - name: cilium-monitor
        image: "quay.io/cilium/cilium:v1.12.4@sha256:4b074fcfba9325c18e97569ed1988464309a5ebf64bbc79bec6f3d58cafcb8cf"
        imagePullPolicy: IfNotPresent
        command:
        - /bin/bash
        - -c
        - --
        args:
        - |-
          for i in {1..5}; do \
            [ -S /var/run/cilium/monitor1_2.sock ] && break || sleep 10;\
            done; \
          cilium monitor
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - name: cilium-run
          mountPath: /var/run/cilium
      initContainers:
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.12.4@sha256:4b074fcfba9325c18e97569ed1988464309a5ebf64bbc79bec6f3d58cafcb8cf"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.12.4@sha256:4b074fcfba9325c18e97569ed1988464309a5ebf64bbc79bec6f3d58cafcb8cf"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
      - name: wait-for-node-init
        image: "quay.io/cilium/cilium:v1.12.4@sha256:4b074fcfba9325c18e97569ed1988464309a5ebf64bbc79bec6f3d58cafcb8cf"
        imagePullPolicy: IfNotPresent
        command:
        - sh
        - -c
        - |
          until test -s "/tmp/cilium-bootstrap.d/cilium-bootstrap-time"; do
            echo "Waiting on node-init to run...";
            sleep 1;
          done
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - name: cilium-bootstrap-file-dir
          mountPath: "/tmp/cilium-bootstrap.d"
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.12.4@sha256:4b074fcfba9325c18e97569ed1988464309a5ebf64bbc79bec6f3d58cafcb8cf"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      dnsPolicy: Default
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
      - name: cilium-bootstrap-file-dir
        hostPath:
          path: "/tmp/cilium-bootstrap.d"
          type: DirectoryOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        secret:
          secretName: cilium-clustermesh
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          optional: true
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
---
# Source: cilium/templates/cilium-nodeinit/daemonset.yaml
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: cilium-node-init
  namespace: kube-network
  labels:
    app: cilium-node-init
spec:
  selector:
    matchLabels:
      app: cilium-node-init
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        app: cilium-node-init
    spec:
      containers:
        - name: node-init
          image: "quay.io/cilium/startup-script:d69851597ea019af980891a4628fb36b7880ec26"
          imagePullPolicy: IfNotPresent
          lifecycle:
          env:
          # STARTUP_SCRIPT is the script run on node bootstrap. Node
          # bootstrapping can be customized in this script. This script is invoked
          # using nsenter, so it runs in the host's network and mount namespace using
          # the host's userland tools!
          - name: STARTUP_SCRIPT
            value: |
              #!/bin/bash
              
              set -o errexit
              set -o pipefail
              set -o nounset
              
              echo "Link information:"
              ip link
              
              echo "Routing table:"
              ip route
              
              echo "Addressing:"
              ip -4 a
              ip -6 a
              mkdir -p "/tmp/cilium-bootstrap.d"
              date > "/tmp/cilium-bootstrap.d/cilium-bootstrap-time"
              echo "Node initialization complete"
              
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            capabilities:
              add:
              - SYS_MODULE
              - NET_ADMIN
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            privileged: true
            seLinuxOptions:
              level: s0
              type: spc_t
          terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      hostPID: true
      hostNetwork: true
      priorityClassName: system-node-critical
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-network
  labels:
    io.cilium/app: operator
    name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/cilium-configmap-checksum: "e044d8e167dbc80b11853e1da1a7802c928030fd91dc9a69e8aaf94ce664307e"
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.12.4@sha256:071089ec5bca1f556afb8e541d9972a0dfb09d1e25504ae642ced021ecbedbd1"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        ports:
        - name: prometheus
          containerPort: 9963
          hostPort: 9963
          protocol: TCP
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      dnsPolicy: Default
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-network
  labels:
    k8s-app: hubble-relay
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/hubble-relay-configmap-checksum: "1356fe4f89051bf8e0069538e7dfc3a5a3072d035b153e2c18e48b04505e5402"
      labels:
        k8s-app: hubble-relay
    spec:
      containers:
        - name: hubble-relay
          image: "quay.io/cilium/hubble-relay:v1.12.4@sha256:dc5b396e94f986f83ccef89f13a91c29df482d4af491ff3bd4d40c05873d351a"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
            - name: prometheus
              containerPort: 9966
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: ca.crt
                  path: hubble-server-ca.crt
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-network
  labels:
    k8s-app: hubble-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/hubble-ui-nginx-configmap-checksum: "b175746d53577d278ce3e74c3c7310fd94e1c11c187df330efa2546bd900ad4b"
      labels:
        k8s-app: hubble-ui
    spec:
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.9.2@sha256:d3596efc94a41c6b772b9afe6fe47c17417658956e04c3e2a28d293f2670663e"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        volumeMounts:
          - name: hubble-ui-nginx-conf
            mountPath: /etc/nginx/conf.d/default.conf
            subPath: nginx.conf
          - name: tmp-dir
            mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.9.2@sha256:a3ac4d5b87889c9f7cc6323e86d3126b0d382933bd64f44382a92778b0cde5d7"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
# Source: cilium/templates/cilium-agent/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: cilium-agent
  namespace: kube-network
  labels:
  annotations:
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  namespaceSelector:
    matchNames:
    - kube-network
  endpoints:
  - port: metrics
    interval: 10s
    honorLabels: true
    path: /metrics
  targetLabels:
  - k8s-app
---
# Source: cilium/templates/cilium-operator/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: cilium-operator
  namespace: kube-network
  labels:
  annotations:
spec:
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  namespaceSelector:
    matchNames:
    - kube-network
  endpoints:
  - port: metrics
    interval: 10s
    honorLabels: true
    path: /metrics
  targetLabels:
  - io.cilium/app
---
# Source: cilium/templates/hubble-relay/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: hubble-relay
  namespace: kube-network
  labels:
  annotations:
spec:
  selector:
    matchLabels:
      k8s-app: hubble-relay
  namespaceSelector:
    matchNames:
    - kube-network
  endpoints:
  - port: metrics
    interval: "10s"
    path: /metrics
---
# Source: cilium/templates/hubble/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: hubble
  namespace: kube-network
  labels:
  annotations:
spec:
  selector:
    matchLabels:
      k8s-app: hubble
  namespaceSelector:
    matchNames:
    - kube-network
  endpoints:
  - port: hubble-metrics
    interval: 10s
    honorLabels: true
    path: /metrics
